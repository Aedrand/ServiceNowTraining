<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_134426_mod_list_program_requests</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent Duplicate Entries</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	//Search Program table for a record that has the same name as the Request.
	var duplicateSearchProg = new GlideRecord('x_134426_mod_list_all_programs');
	duplicateSearchProg.addQuery('name','=',current.getValue('name'));
	duplicateSearchProg.query();
	
	//Search Requests table for a record that has the same name as the Request.
	var duplicateSearchReq = new GlideRecord('x_134426_mod_list_program_requests');
	duplicateSearchReq.addQuery('name','=', current.getValue('name'));
	duplicateSearchReq.query();
	
	//If a duplicate is found in the Program table, display error message and
	//abort action. Also stops script execution to prevent multiple messages
	//if the new Request is also found in Request table.
	if(duplicateSearchProg.hasNext()) {
		gs.addErrorMessage('"' + current.getValue('name') + '" already exists in program records,' 
						   + ' request not submitted.');
		current.setAbortAction(true);
		return;
	}
	
	//If duplicate is found in the Requests table, display error message and 
	//abort action.
	if(duplicateSearchReq.next() && duplicateSearchReq.getValue('state') != 'Denied'){
		gs.addErrorMessage('"' + current.getValue('name') + '" has already been submitted.');
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-06-21 21:59:00</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3fcf6d38dbe33200e5c755d0cf9619be</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Prevent Duplicate Entries</sys_name>
        <sys_overrides/>
        <sys_package display_value="Mod List" source="x_134426_mod_list">2f7f9f0fdbd33200e5c755d0cf961978</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Mod List">2f7f9f0fdbd33200e5c755d0cf961978</sys_scope>
        <sys_update_name>sys_script_3fcf6d38dbe33200e5c755d0cf9619be</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-07-10 20:17:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3fcf6d38dbe33200e5c755d0cf9619be"/>
</record_update>
